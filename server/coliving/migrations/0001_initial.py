# Generated by Django 5.2.7 on 2025-10-15 16:42

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('rent', 'Rent'), ('utilities', 'Utilities'), ('groceries', 'Groceries'), ('supplies', 'Supplies'), ('maintenance', 'Maintenance'), ('internet', 'Internet'), ('other', 'Other')], default='other', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('split_type', models.CharField(choices=[('equal', 'Split Equally'), ('custom', 'Custom Split'), ('percentage', 'Percentage Split')], default='equal', max_length=20)),
                ('receipt_image', models.ImageField(blank=True, null=True, upload_to='expense_receipts/')),
                ('expense_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('paid_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paid_expenses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-expense_date'],
            },
        ),
        migrations.CreateModel(
            name='ExpenseSplit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_owed', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('amount_paid', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('is_settled', models.BooleanField(default=False)),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='splits', to='coliving.expense')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expense_splits', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('expense', 'user')},
            },
        ),
        migrations.AddField(
            model_name='expense',
            name='participants',
            field=models.ManyToManyField(related_name='shared_expenses', through='coliving.ExpenseSplit', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='LivingSpace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('space_type', models.CharField(choices=[('apartment', 'Apartment'), ('house', 'House'), ('condo', 'Condo'), ('dorm', 'Dormitory'), ('other', 'Other')], default='apartment', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Describe your living space')),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=50)),
                ('zip_code', models.CharField(blank=True, max_length=10)),
                ('country', models.CharField(default='United States', max_length=50)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('total_bedrooms', models.IntegerField(default=1)),
                ('total_bathrooms', models.DecimalField(decimal_places=1, default=1.0, max_digits=3)),
                ('total_rent', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('utilities_included', models.BooleanField(default=False)),
                ('furnished', models.BooleanField(default=False)),
                ('parking_available', models.BooleanField(default=False)),
                ('available_from', models.DateField(blank=True, null=True)),
                ('lease_duration_months', models.IntegerField(blank=True, help_text='Lease duration in months', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_public', models.BooleanField(default=True, help_text='Allow others to discover this space')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_spaces', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HouseRules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('overnight_guests_allowed', models.BooleanField(default=True)),
                ('max_consecutive_guest_nights', models.IntegerField(default=3)),
                ('guest_notification_required', models.BooleanField(default=True)),
                ('cleaning_schedule', models.TextField(blank=True)),
                ('shared_chores_rotation', models.BooleanField(default=True)),
                ('smoking_allowed', models.BooleanField(default=False)),
                ('pets_allowed', models.BooleanField(default=False)),
                ('alcohol_allowed', models.BooleanField(default=True)),
                ('custom_rules', models.TextField(blank=True, help_text='Additional house rules')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('living_space', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='house_rules', to='coliving.livingspace')),
            ],
            options={
                'verbose_name': 'House Rules',
                'verbose_name_plural': 'House Rules',
            },
        ),
        migrations.AddField(
            model_name='expense',
            name='living_space',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='coliving.livingspace'),
        ),
        migrations.CreateModel(
            name='LivingSpaceMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('member', 'Member'), ('guest', 'Guest')], default='member', max_length=20)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('left_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('living_space', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='coliving.livingspace')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='space_memberships', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='livingspace',
            name='members',
            field=models.ManyToManyField(related_name='living_spaces', through='coliving.LivingSpaceMember', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='LivingSpaceReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_rating', models.IntegerField(help_text='Overall rating (1-5)')),
                ('cleanliness_rating', models.IntegerField(help_text='Cleanliness rating (1-5)')),
                ('location_rating', models.IntegerField(help_text='Location rating (1-5)')),
                ('value_rating', models.IntegerField(help_text='Value for money (1-5)')),
                ('roommate_compatibility', models.IntegerField(help_text='Roommate compatibility (1-5)')),
                ('review_text', models.TextField(help_text='Detailed review')),
                ('pros', models.TextField(blank=True, help_text='What you liked')),
                ('cons', models.TextField(blank=True, help_text='What could be improved')),
                ('verified_stay', models.BooleanField(default=False, help_text='Reviewer actually lived here')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('living_space', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='coliving.livingspace')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='space_reviews', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Room name or number', max_length=100)),
                ('room_type', models.CharField(choices=[('bedroom', 'Bedroom'), ('shared_bedroom', 'Shared Bedroom'), ('studio', 'Studio'), ('master_bedroom', 'Master Bedroom')], default='bedroom', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('size_sqft', models.IntegerField(blank=True, help_text='Room size in square feet', null=True)),
                ('has_private_bathroom', models.BooleanField(default=False)),
                ('has_balcony', models.BooleanField(default=False)),
                ('has_closet', models.BooleanField(default=True)),
                ('furnished', models.BooleanField(default=False)),
                ('air_conditioning', models.BooleanField(default=False)),
                ('is_available', models.BooleanField(default=True)),
                ('monthly_rent', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('security_deposit', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('available_from', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('current_occupant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='occupied_rooms', to=settings.AUTH_USER_MODEL)),
                ('living_space', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='coliving.livingspace')),
            ],
        ),
        migrations.CreateModel(
            name='LivingSpaceImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Upload space photos', upload_to='living_spaces/')),
                ('image_type', models.CharField(choices=[('exterior', 'Exterior'), ('living_room', 'Living Room'), ('kitchen', 'Kitchen'), ('bathroom', 'Bathroom'), ('bedroom', 'Bedroom'), ('amenity', 'Amenity'), ('other', 'Other')], default='other', max_length=20)),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('is_primary', models.BooleanField(default=False, help_text='Main photo for this space')),
                ('order', models.IntegerField(default=0, help_text='Display order')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('living_space', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='coliving.livingspace')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_space_images', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='coliving.room')),
            ],
            options={
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='RoomApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(help_text='Why do you want to live here?')),
                ('move_in_date', models.DateField()),
                ('lease_duration_months', models.IntegerField(help_text='Desired lease duration in months')),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('employment_status', models.CharField(blank=True, choices=[('employed', 'Employed'), ('self-employed', 'Self-Employed'), ('student', 'Student'), ('unemployed', 'Unemployed')], max_length=20)),
                ('monthly_income', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('references', models.TextField(blank=True, help_text='Previous landlords, employers, or personal references')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='pending', max_length=20)),
                ('review_message', models.TextField(blank=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_applications', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_applications', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='coliving.room')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('cleaning', 'Cleaning'), ('maintenance', 'Maintenance'), ('groceries', 'Groceries'), ('bills', 'Bills'), ('other', 'Other')], default='other', max_length=20)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('recurrence', models.CharField(choices=[('none', 'One-time'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], default='none', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('overdue', 'Overdue')], default='pending', max_length=20)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to=settings.AUTH_USER_MODEL)),
                ('living_space', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='coliving.livingspace')),
            ],
            options={
                'ordering': ['due_date', 'created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['living_space', 'expense_date'], name='coliving_ex_living__5f87d2_idx'),
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['paid_by', 'expense_date'], name='coliving_ex_paid_by_17656a_idx'),
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['category'], name='coliving_ex_categor_ccf1d0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='livingspacemember',
            unique_together={('living_space', 'user')},
        ),
        migrations.AddIndex(
            model_name='livingspace',
            index=models.Index(fields=['created_by'], name='coliving_li_created_94ef43_idx'),
        ),
        migrations.AddIndex(
            model_name='livingspace',
            index=models.Index(fields=['is_active'], name='coliving_li_is_acti_91fc6a_idx'),
        ),
        migrations.AddIndex(
            model_name='livingspace',
            index=models.Index(fields=['city', 'is_public'], name='coliving_li_city_0cbbc4_idx'),
        ),
        migrations.AddIndex(
            model_name='livingspace',
            index=models.Index(fields=['available_from'], name='coliving_li_availab_1dbeb1_idx'),
        ),
        migrations.AddIndex(
            model_name='livingspacereview',
            index=models.Index(fields=['living_space', 'overall_rating'], name='coliving_li_living__aeae71_idx'),
        ),
        migrations.AddIndex(
            model_name='livingspacereview',
            index=models.Index(fields=['created_at'], name='coliving_li_created_fdcab0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='livingspacereview',
            unique_together={('living_space', 'reviewer')},
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['living_space', 'is_available'], name='coliving_ro_living__e726cd_idx'),
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['available_from'], name='coliving_ro_availab_c15e8e_idx'),
        ),
        migrations.AddIndex(
            model_name='livingspaceimage',
            index=models.Index(fields=['living_space', 'is_primary'], name='coliving_li_living__795bcc_idx'),
        ),
        migrations.AddIndex(
            model_name='livingspaceimage',
            index=models.Index(fields=['room'], name='coliving_li_room_id_f9fd10_idx'),
        ),
        migrations.AddIndex(
            model_name='roomapplication',
            index=models.Index(fields=['room', 'status'], name='coliving_ro_room_id_14e2df_idx'),
        ),
        migrations.AddIndex(
            model_name='roomapplication',
            index=models.Index(fields=['applicant', 'status'], name='coliving_ro_applica_efcf5a_idx'),
        ),
        migrations.AddIndex(
            model_name='roomapplication',
            index=models.Index(fields=['created_at'], name='coliving_ro_created_e77018_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='roomapplication',
            unique_together={('room', 'applicant')},
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['living_space', 'status'], name='coliving_ta_living__8b8a8f_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['assigned_to', 'status'], name='coliving_ta_assigne_266a75_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['due_date'], name='coliving_ta_due_dat_61bf64_idx'),
        ),
    ]
