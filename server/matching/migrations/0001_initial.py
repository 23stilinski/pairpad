# Generated by Django 5.2.6 on 2025-09-18 15:28

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_age', models.IntegerField(default=18)),
                ('max_age', models.IntegerField(default=65)),
                ('preferred_gender', models.CharField(choices=[('any', 'Any'), ('male', 'Male'), ('female', 'Female'), ('non_binary', 'Non-binary')], default='any', max_length=20)),
                ('max_distance_km', models.IntegerField(default=50)),
                ('smoking_preference', models.CharField(choices=[('any', 'Any'), ('smoker', 'Smoker'), ('non_smoker', 'Non-smoker')], default='any', max_length=20)),
                ('pets_preference', models.CharField(choices=[('any', 'Any'), ('has_pets', 'Has Pets'), ('no_pets', 'No Pets')], default='any', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='match_preferences', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompatibilityScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personality_score', models.FloatField(default=0.0)),
                ('lifestyle_score', models.FloatField(default=0.0)),
                ('communication_score', models.FloatField(default=0.0)),
                ('location_score', models.FloatField(default=100.0)),
                ('overall_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('calculated_at', models.DateTimeField(auto_now=True)),
                ('user1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compatibility_scores_as_user1', to=settings.AUTH_USER_MODEL)),
                ('user2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compatibility_scores_as_user2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['overall_score'], name='matching_co_overall_d0bfdd_idx'), models.Index(fields=['user1', 'overall_score'], name='matching_co_user1_i_cb316b_idx'), models.Index(fields=['user2', 'overall_score'], name='matching_co_user2_i_b6b6ba_idx')],
                'unique_together': {('user1', 'user2')},
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compatibility_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('mutual', 'Mutual Match')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_user1', to=settings.AUTH_USER_MODEL)),
                ('user2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_user2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user1', 'status'], name='matching_ma_user1_i_58bf32_idx'), models.Index(fields=['user2', 'status'], name='matching_ma_user2_i_516af4_idx'), models.Index(fields=['compatibility_score'], name='matching_ma_compati_a984a6_idx')],
                'unique_together': {('user1', 'user2')},
            },
        ),
        migrations.CreateModel(
            name='MatchInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_type', models.CharField(choices=[('like', 'Like'), ('pass', 'Pass'), ('super_like', 'Super Like'), ('block', 'Block')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('target_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_interactions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_interactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user', 'interaction_type'], name='matching_ma_user_id_b89fce_idx'), models.Index(fields=['target_user', 'interaction_type'], name='matching_ma_target__7a3379_idx')],
                'unique_together': {('user', 'target_user')},
            },
        ),
    ]
