# Generated by Django 5.2.7 on 2025-10-15 14:38

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('student', 'Student'), ('professional', 'Young Professional'), ('admin', 'Administrator'), ('coordinator', 'Housing Coordinator')], default='student', max_length=20)),
                ('verification_status', models.CharField(choices=[('pending', 'Pending'), ('verified', 'Verified'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('non_binary', 'Non-binary'), ('prefer_not_to_say', 'Prefer not to say')], max_length=20)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('occupation', models.CharField(blank=True, max_length=100)),
                ('education', models.CharField(blank=True, max_length=100)),
                ('current_city', models.CharField(blank=True, max_length=100)),
                ('preferred_city', models.CharField(blank=True, max_length=100)),
                ('budget_min', models.IntegerField(blank=True, help_text='Minimum monthly budget in dollars', null=True)),
                ('budget_max', models.IntegerField(blank=True, help_text='Maximum monthly budget in dollars', null=True)),
                ('move_in_date', models.DateField(blank=True, null=True)),
                ('lease_duration', models.CharField(blank=True, choices=[('3_months', '3 months'), ('6_months', '6 months'), ('12_months', '12 months'), ('18_months', '18 months'), ('24_months', '24+ months'), ('flexible', 'Flexible')], max_length=20)),
                ('smoking_preference', models.CharField(choices=[('no_preference', 'No Preference'), ('smoker', 'I smoke'), ('non_smoker', 'Non-smoker only')], default='no_preference', max_length=20)),
                ('pets_preference', models.CharField(choices=[('no_preference', 'No Preference'), ('has_pets', 'I have pets'), ('no_pets', 'No pets'), ('loves_pets', "Love pets but don't have any")], default='no_preference', max_length=20)),
                ('guests_preference', models.CharField(choices=[('rarely', 'Rarely have guests'), ('occasionally', 'Occasionally have guests'), ('frequently', 'Frequently have guests'), ('no_guests', 'No overnight guests')], default='occasionally', max_length=20)),
                ('cleanliness_level', models.IntegerField(default=50, help_text='Cleanliness preference from 0-100')),
                ('social_level', models.IntegerField(default=50, help_text='Social preference from 0-100')),
                ('quiet_hours', models.BooleanField(default=False)),
                ('bio', models.TextField(blank=True, help_text='Personal bio for roommate matching')),
                ('interests', models.TextField(blank=True, help_text='Interests and hobbies')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='OnboardingProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed')], default='not_started', max_length=20)),
                ('completed_steps', models.JSONField(default=dict, help_text='Dictionary of completed steps')),
                ('progress_percentage', models.IntegerField(default=0, help_text='Overall progress 0-100')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='onboarding_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Onboarding Progress',
                'verbose_name_plural': 'Onboarding Progress Records',
                'ordering': ['-created_at'],
            },
        ),
    ]
